;@author		Thomas Besser
;@email			thomas.besser@kit.edu
;@date			21.11.2018
;@copyright		AGPLv3
;@version		1.0
;@Description	Search in registry (HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall, 32- and 64-bit scope, attribute "DisplayName") for installed software
;@Returns		Returns stringlist (multiple hits possible)
;@Returns		Single string item (= hit) is a composite from "registry key with path", "scope of registry" and "displayname", separated by character "|" (because opsi-script does not know multi-array)
;@Returns		for example: "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64"
;@ParamDesc_$SearchTerm$	Search term of which a software can be found in registry on the basis of "DisplayName" (Installers usually are setting this attribute); is not case-sensitive
;@Example	[actions]
;@Example	DefStringList $ResultList$
;@Example	DefVar $RegId$
;@Example	DefVar $RegBitScope$
;@Example	DefVar $InstalledVersion$
;@Example	Set $ResultList$ = SearchRegistryUninstallKeys("Test")
;@Example	; take only the first hit
;@Example	Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
;@Example	Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))
;@Example	Set $InstalledVersion$ = GetRegistryValue($RegId$, "DisplayVersion", $RegBitScope$)

DefFunc SearchRegistryUninstallKeys(val $SearchTerm$ : string) : stringlist
	DefStringList $ResultList$
	DefStringList $KeyList$
	DefVar $RegPathUninstall$
	DefVar $KeyPath$
	DefVar $DisplayName$
	DefVar $RegBitScope$
	DefVar $SystemType$

	Set $SystemType$ = GetSystemType
	Set $RegPathUninstall$ = "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall"

	; nur auf 64-Bit-Systemen ausführen
	if ($SystemType$ = "64 Bit System")
		; zuerst 64-Bit
		Set $KeyList$ = getRegistryKeyList64($RegPathUninstall$)
		Set $RegBitScope$ = "64bit"
		for %k% in $KeyList$ do Sub_search_in_keys
	endif
	; jetzt 32-Bit
	Set $KeyList$ = getRegistryKeyList32($RegPathUninstall$)
	Set $RegBitScope$ = "32bit"
	for %k% in $KeyList$ do Sub_search_in_keys

	Set $result$ = $ResultList$	

	[Sub_search_in_keys]
	Set $KeyPath$ = $RegPathUninstall$ + "\%k%"
	if RegVarExists($KeyPath$, "DisplayName", $RegBitScope$)
		Set $DisplayName$ = getRegistryValue($KeyPath$, "DisplayName", $RegBitScope$)
		; Check DisplayName auf Suchbegriff, alles lower damit case-insensitive
		if (contains(lower($DisplayName$), lower($SearchTerm$)))
			; zusätzlich noch vermerken, in welchem Teil der Registry (32- oder 64bit) der Schlüssel gefunden wurde. Auch DisplayName mitliefern
			Set $ResultList$ = addtolist($ResultList$, $KeyPath$ + "|" + $RegBitScope$ + "|" + $DisplayName$)
		endif		
	endif
endfunc
